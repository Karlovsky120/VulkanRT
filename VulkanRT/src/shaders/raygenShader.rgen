#version 460

#extension GL_GOOGLE_include_directive : require
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_scalar_block_layout : require

#include "sharedStructures.h"

layout(set = 0, binding = 2) uniform accelerationStructureEXT accelerationStructure;
layout(set = 0, binding = 3, rgba8) uniform image2D targetImage;

layout(push_constant) uniform PushConstants {
	RayTracingPushData pd;
} pc;

layout(location = 0) rayPayloadEXT vec3 hitValue;

void main() {
    vec2 pixelCenter = (vec2(gl_LaunchIDEXT.xy) + vec2(0.5)) * 2 - gl_LaunchSizeEXT.xy;
    float z = -pc.pd.oneOverTanOfHalfFov * gl_LaunchSizeEXT.y;

	vec4 origin = vec4(0,0,0,1) * pc.pd.cameraTransformationInverse;
    vec4 direction = vec4(pixelCenter.x, -pixelCenter.y, z, 1) * pc.pd.cameraTransformationInverse;

	float tmin = 0.0001;
	float tmax = 1000.0;

    hitValue = vec3(0.0);

    traceRayEXT(
        accelerationStructure,
        gl_RayFlagsOpaqueEXT,
        0xFF,
        0,
        0,
        0,
        origin.xyz,
        tmin,
        direction.xyz,
        tmax,
        0);

	imageStore(targetImage, ivec2(gl_LaunchIDEXT.xy), vec4(hitValue, 0.0));
}
