#version 460

#extension GL_GOOGLE_include_directive : require
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_scalar_block_layout : require

#include "sharedStructures.h"

layout(binding = 2, set = 0) uniform accelerationStructureEXT accelerationStructure;
layout(binding = 3, set = 0, rgba8) uniform image2D targetImage;

layout(push_constant) uniform PushConstants {
	RayTracePushData pd;
} pc;

layout(location = 0) rayPayloadEXT vec3 hitValue;

void main() {
	const vec2 pixelCenter = vec2(gl_LaunchIDEXT.xy) + vec2(0.5);
	const vec2 inUV = pixelCenter/vec2(gl_LaunchSizeEXT.xy);
	vec2 d = inUV * 2.0 - 1.0;

	vec4 origin = pc.pd.cameraTransformationInverse * vec4(0,0,0,1);
	vec4 target = vec4(d.x * pc.pd.tanOfHalfFov * pc.pd.aspectRatio,
                       d.y * pc.pd.tanOfHalfFov,
                       pc.pd.oneOverNear,
                       -1);
    
	vec4 direction = pc.pd.cameraTransformationInverse * vec4(normalize(target.xyz), 0);

	float tmin = 0.001;
	float tmax = 1000.0;

    traceRayEXT(
        accelerationStructure,
        gl_RayFlagsOpaqueEXT,
        0xFF,
        0,
        0,
        0,
        origin.xyz,
        tmin,
        direction.xyz,
        tmax,
        0);

	imageStore(targetImage, ivec2(gl_LaunchIDEXT.xy), vec4(hitValue, 0.0));
}
